(dp1
S'output'
p2
S"<class 'sqlite3.IntegrityError'> UNIQUE constraint failed: resolved_names3.classification_path_ranks"
p3
sS'layer'
p4
S'/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\n\n\ndef display_taxonomic_tree():\n    import json\n    # Important: root nodes must have \'parent\':\'#\'\n    m = None\n    #root_taxon = \'\'\n\n    form=FORM(\'Root taxon (leave blank to include all taxa):\',\n        INPUT(_name=\'root_taxon\'),\n        INPUT(_type=\'submit\'),\n    )\n\n    if form.accepts(request,session):\n\n        root_taxon = form.vars.root_taxon\n        print(root_taxon)\n\n        #level_dict = {\'kingdom\':1,\'phylum\':2,\'class\':3,\'order\':4,\'family\':5,\'genus\':6,\'species\':7}\n        if root_taxon == \'\':\n            rows = db(db.taxon2).select(orderby=db.taxon2.lineage)\n        else:\n            rows = db(db.taxon2.lineage.contains(root_taxon)).select(orderby=db.taxon2.lineage)\n            rows[0].parent_tid = \'#\'\n\n        mylist = []\n        for row in rows:\n            if row.trank in [\'genus\',\'species\']:\n                text = \'{} <i>{}</i>\'.format(row.trank, row.name)\n            else:\n                text = \'{} {}\'.format(row.trank, row.name)\n            mylist.append({\'id\':row.tid,\'parent\':row.parent_tid,\'text\':text})\n        m = json.dumps(mylist)\n\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'Please select a root taxon and press "SUBMIT QUERY".\'\n    return dict(form=form, m=m)\n\n# def show_tree():\n#     root_taxon = \'Plantae\'\n#     level_dict = {\'kingdom\':1,\'phylum\':2,\'class\':3,\'order\':4,\'family\':5,\'genus\':6,\'species\':7}\n#     previous_level = 0\n#     s = \'<ul>\\n\'\n#     first_row = True\n#     for row in db(db.taxon2.lineage.contains(root_taxon)).select(orderby=db.taxon2.lineage):\n#         if first_row:\n#             previous_level = level_dict[row.trank]\n#             first_row = False\n#         level = level_dict[row.trank]\n#         while level > previous_level:\n#             s +=\'<ul>\\n\'\n#             previous_level += 1\n#         while level < previous_level:\n#             s += \'</ul>\\n\'\n#             previous_level -= 1\n#         s+= \'<li>{} {}</li>\\n\'.format(row.trank, row.name)\n#         previous_level = level\n#     return dict(s=s)\n#\n# def show_tree3():\n#     return locals()\n#\n# def show_tree2():\n#     root_taxon = \'Plantae\'\n#     level_dict = {\'kingdom\':1,\'phylum\':2,\'class\':3,\'order\':4,\'family\':5,\'genus\':6,\'species\':7}\n#     rows = db(db.taxon2.lineage.contains(root_taxon)).select(orderby=db.taxon2.lineage)\n#     return locals()\n#\n#\n\n\ndef populate_resolved_names_table():\n    db.resolved_names3.truncate() # Delete all records in table\n    data = get_extracted_names()[\'resolved_names\']\n    for row in data:\n        if \'results\' in row.keys():\n            db.resolved_names3.insert(\n                supplied_name_string = row.get(\'supplied_name_string\', None),\n                classification_path = row[\'results\'][0].get(\'classification_path\', None),\n                classification_path_ids = row[\'results\'][0].get(\'classification_path_ids\', None),\n                classification_path_ranks = row[\'results\'][0].get(\'classification_path_ranks\', None)\n            )\n    # Now manually insert some more records\n\n    # To get data, go to http://resolver.globalnames.org/\n    # Search against the GBIF data source\n    # Copy data from JSON or XML\n    db.resolved_names3.insert(\n        supplied_name_string = \'Musa\',\n        classification_path = \'Plantae|Tracheophyta|Liliopsida|Zingiberales|Musaceae|Musa\',\n        classification_path_ids = \'6|7707728|196|627|4686|2760990\',\n        classification_path_ranks = \'kingdom|phylum|class|order|family|genus\'\n        )\n    db.resolved_names3.insert(\n        supplied_name_string = \'Ficus\',\n        classification_path = \'Plantae|Tracheophyta|Magnoliopsida|Rosales|Moraceae|Ficus\',\n        classification_path_ids = \'6|7707728|220|691|6640|2984588\',\n        classification_path_ranks = \'kingdom|phylum|class|order|family|genus\'\n        )\n    db.resolved_names3.insert(\n        supplied_name_string = \'Artocarpus heterophyllus\',\n        classification_path = \'Plantae|Tracheophyta|Magnoliopsida|Rosales|Moraceae|Artocarpus|Artocarpus heterophyllus\',\n        classification_path_ids = \'6|7707728|220|691|6640|2984563|2984565\',\n        classification_path_ranks = \'kingdom|phylum|class|order|family|genus|species\'\n        )\n    db.resolved_names3.insert(\n        supplied_name_string = \'Rosa\',\n        classification_path = \'Plantae|Tracheophyta|Magnoliopsida|Rosales|Rosaceae|Rosa\',\n        classification_path_ids = \'6|7707728|220|691|5015|8395064\',\n        classification_path_ranks = \'kingdom|phylum|class|order|family|genus\'\n        )\n    db.resolved_names3.insert(\n        supplied_name_string = \'Colocasia esculenta\',\n        classification_path = \'Plantae|Tracheophyta|Liliopsida|Alismatales|Araceae|Colocasia|Colocasia esculenta\',\n        classification_path_ids = \'6|7707728|196|551|6979|5330758|5330776\',\n        classification_path_ranks = \'kingdom|phylum|class|order|family|genus|species\'\n        )\n    # db.resolved_names3.insert(\n    #     supplied_name_string = \'\',\n    #     classification_path = \'\',\n    #     classification_path_ids = \'\',\n    #     classification_path_ranks = \'\'\n    #     )\n\n    return\n\n\ndef check_name():\n    import requests\n    name = \'Nysius pulchellus\'\n    url = \'http://resolver.globalnames.org/name_resolvers.json\'\n    params = {\'names\': name, \'data_source_ids\': \'11\'}\n    r = requests.get(url, params)\n    mydict = r.json()\n    return mydict\n\n\ndef unknown_names():\n    s = \'<h1>Unknown Names</h1>\'\n    data = get_extracted_names()[\'resolved_names\']\n    for row in data:\n        if not row[\'is_known_name\']:\n            s += \'{} _{}_<br>\'.format(row[\'is_known_name\'], row[\'supplied_name_string\'])\n    return s\n\ndef annotate():\n    import urllib2\n    # Download pestlist web page as a string.\n    f = urllib2.urlopen(\'https://aubreymoore.github.io/crop-pest-list/list.html\')\n    s = f.read().decode(\'utf-8\')\n    data = get_extracted_names()[\'resolved_names\']\n    for row in data:\n        if \'results\' in row.keys():\n            # If current_taxon_id is available, use this in place of taxon_id.\n            # For example, with supplied_name_string = \'Dacus cucurbitae\',\n            # taxon_id points to \'Dacus cucurbitae\', whereas current_taxon_id\n            # points to \'Bactrocera cucurbitae\', which is the current, accepted\n            # name for melon fly.\n            taxon_id = row[\'results\'][0].get(\'taxon_id\', None)\n            current_taxon_id = row[\'results\'][0].get(\'current_taxon_id\', None)\n            if current_taxon_id:\n                taxon_id = current_taxon_id\n\n            supplied_name_string = row.get(\'supplied_name_string\', None)\n            print(taxon_id, supplied_name_string)\n            s = s.replace(\n                supplied_name_string,\n                \'{} <a href="http://www.gbif.org/species/{}">{}</a>\'\n                    .format(supplied_name_string, taxon_id, taxon_id)\n                )\n    return s\n\n\ndef annotate2():\n    import urllib2\n    # Download pestlist web page as a string.\n    f = urllib2.urlopen(\'https://aubreymoore.github.io/crop-pest-list/list.html\')\n    s = f.read().decode(\'utf-8\')\n    for row in db(db.resolved_names2.id > 0).select():\n        supplied_name_string = row.supplied_name_string\n        taxon_id = row.classification_path_ids.split(\'|\')[-1]\n        taxon_rank = row.classification_path_ranks.split(\'|\')[-1]\n        # Is this a leaf node?\n        cp_ids = row.classification_path_ids\n        children_count = db(db.resolved_names2.classification_path_ids.startswith(cp_ids)).count()\n        if children_count == 1: # This is a leaf node\n            s = s.replace(supplied_name_string,\n                    \'{} <a href="http://www.gbif.org/species/{}">{}</a>\'\n                        .format(supplied_name_string, taxon_id, taxon_id))\n    return s\n\n\n# def get_supplied_names():\n#     data = get_extracted_names()[\'resolved_names\']\n#     name_list = []\n#     for row in data:\n#         if \'results\' in row.keys():\n#             taxon_id = row[\'results\'][0].get(\'taxon_id\', None)\n#             supplied_name_string = row.get(\'supplied_name_string\', None)\n#\n#\n#\n#             name_list.append({\n#                 \'tid\': tid,\n#                 \'name\': row[\'supplied_name_string\'],\n#                 \'name_type\': \'supplied name string\'\n#             })\n#\n#\n#             my_dict = {\'supplied_name_string\': }\n#             results_dict = row[\'results\'][0]\n#             if \'taxon_id\' in results_dict:\n#                 my_dict.append\n#             mydict = {\n#                 \'taxon_id\': row[\'results\'][0].get(\'taxon_id\',\'\'),\n#\n#\n#                 \'canonical_form\': row[\'results\'][0].get(\'canonical_form\',\'\'),\n#                 \'current_name_string\': row[\'results\'][0].get(\'current_name_string\',\'\'),\n#                 \'name_string\': row[\'results\'][0].get(\'name_string\',\'\'),\n#             }\n#             name_list.append(mydict)\n#     return BEAUTIFY(name_list)\n\n\ndef get_extracted_names():\n    \'\'\'\n    Returns the contents of the \'extracted_names_json\' field in the first\n    record of the \'extracted_names\' table.\n    \'\'\'\n    return db(db.extracted_names).select()[0][\'extracted_names_json\']\n\n\n# def parse_resolved_names():\n#     \'\'\'\n#     docs go Here\n#     \'\'\'\n#     rows = db(db.taxon).select()\n#     if len(rows) == 0:\n#         db.taxon.insert(name=\'root\', tid=0)\n#         print(\'root added\')\n#\n#     resolved_names_list = get_extracted_names()[\'resolved_names\']\n#     for resolved_name in resolved_names_list:\n#         results_list = resolved_name.get(\'results\', None)\n#         if results_list:\n#             result_dict = results_list[0]\n#             classification_path = result_dict[\'classification_path\'].split(\'|\')\n#             classification_path_ids = result_dict[\'classification_path_ids\'].split(\'|\')\n#             classification_path_ranks = result_dict[\'classification_path_ranks\'].split(\'|\')\n#\n#             print classification_path\n#\n#             assert classification_path_ranks[0] == \'kingdom\'\n#             assert len(classification_path) == len(classification_path_ids)\n#             assert len(classification_path_ids) == len(classification_path_ranks)\n#\n#             for i in range(len(classification_path)):\n#                 if i == 0:\n#                     parent_tid = 0\n#                 else:\n#                     parent_tid = classification_path_ids[i-1]\n#\n#                 tid = classification_path_ids[i]\n#                 name = classification_path[i]\n#                 trank = classification_path_ranks[i]\n#\n#                 try:\n#                     print(\'trying to add tid={}, name={}, trank={}, parent_tid={}\'.format(tid, name, trank, parent_tid))\n#                     db.taxon.insert(tid=tid, name=name, trank=trank, parent_tid=parent_tid)\n#                     print( \'{} added\'.format(name))\n#                 except sqlite3.IntegrityError:\n#                     print(\'{} not added - already in DB.\'.format(name))\n#                     pass\n#     return\n\ndef parse_resolved_names2():\n    \'\'\'\n    Parses the JSON data stored in \'db.extracted_names.extracted_names_json\' and\n    inserts all taxa to a self-referencing table, \'db.taxon2\'. Fields in\n    this table are:\n\n        tid: taxon id; usually a GBIF taxon id\n        parent_tid: tid of the taxon\'s parent; parent of a root must be \'#\'\n        name: taxon name\n        trank: taxon rank (kingdom, phylum, class, order family, genus or species)\n        lineage: ancestors of the taxon; eg. lineage for Oryctes rhinoceros is:\n            Animalia|Arthropoda|Insecta|Coleoptera|Dynastidae|Oryctes|Oryctes rhinoceros\n\n    Dependancies:\n        get_extracted_names\n    \'\'\'\n    import sqlite3\n\n    resolved_names_list = get_extracted_names()[\'resolved_names\']\n    for resolved_name in resolved_names_list:\n        results_list = resolved_name.get(\'results\', None)\n        if results_list:\n            result_dict = results_list[0]\n            #lineage = result_dict[\'classification_path\']\n            classification_path = result_dict[\'classification_path\'].split(\'|\')\n            classification_path_ids = result_dict[\'classification_path_ids\'].split(\'|\')\n            classification_path_ranks = result_dict[\'classification_path_ranks\'].split(\'|\')\n\n            print classification_path\n\n            assert classification_path_ranks[0] == \'kingdom\'\n            assert len(classification_path) == len(classification_path_ids)\n            assert len(classification_path_ids) == len(classification_path_ranks)\n\n            for i in range(len(classification_path)):\n                if i == 0:\n                    parent_tid = \'#\' # The hash symbol is used by jstree to signify a root node\n                else:\n                    parent_tid = classification_path_ids[i-1]\n                tid = classification_path_ids[i]\n                name = classification_path[i]\n                trank = classification_path_ranks[i]\n                lineage = \'|\'.join(classification_path[0:i+1])\n\n                try:\n                    print(\'trying to add tid={}, name={}, trank={}, lineage={}\'.format(tid, name, trank, lineage))\n                    db.taxon2.insert(tid=tid, parent_tid=parent_tid, name=name, trank=trank, lineage=lineage)\n                    print( \'{} added\'.format(name))\n                except sqlite3.IntegrityError:\n                    print(\'{} not added - already in DB.\'.format(name))\n                    pass\n    return\n\n#@auth.requires_login()\ndef show_taxon2():\n    grid = SQLFORM.grid(db.taxon2, maxtextlength=1000, paginate=1000)\n    return locals()\n\ndef find_names(doc_url):\n    \'\'\'\n    Uses the Global Names Resolver to extract scientific names from \'doc_url\'\n    which can point to an HTML or PDF document.\n    \'\'\'\n    import requests\n    import time\n\n    url = \'http://gnrd.globalnames.org/name_finder.json?\'\n    #params = {\'url\': \'https://aubreymoore.github.io/crop-pest-list/list.html\'}\n    params = {\'url\': doc_url, \'data_source_ids\': \'11\'}\n    r = requests.get(url, params)\n    mydict = r.json()\n    token_url = mydict[\'token_url\']\n    print(\'token_url: {}\'.format(token_url))\n\n    # Poll the token url once a second for 100 s to see if results have been returned.\n    i = 0\n    while i <= 100:\n        i += 1\n        time.sleep(1)\n        r = requests.get(token_url)\n        mydict = r.json()\n        status = mydict.get(\'status\',\'\')\n        queue_size = mydict.get(\'queue_size\',\'\')\n        print(\'{} status: {} queue_size: {}\'.format(i, status, queue_size))\n        if status != 303:\n            break\n    return(mydict)\n\n\ndef doit():\n    \'\'\'\n    Uses the find_names function to extract scientific names from\n    \'https://aubreymoore.github.io/crop-pest-list/list.html\' and stores the\n    returned JSON data in db.extracted_names.\n\n    This function runs only when the extracted_names table is empty.\n\n    Dependancies:\n        find_names\n    \'\'\'\n    if len(db(db.extracted_names).select())==0:\n        doc_url = \'https://aubreymoore.github.io/crop-pest-list/list.html\'\n        db.extracted_names.insert(extracted_names_json=find_names(doc_url))\n        return(\'Added record.\')\n    return(\'Did not add record\')\n\n\ndef index():\n    return dict(message=T(\'Welcome to pestlist!\'))\n\n\n# def user():\n#     """\n#     exposes:\n#     http://..../[app]/default/user/login\n#     http://..../[app]/default/user/logout\n#     http://..../[app]/default/user/register\n#     http://..../[app]/default/user/profile\n#     http://..../[app]/default/user/retrieve_password\n#     http://..../[app]/default/user/change_password\n#     http://..../[app]/default/user/bulk_register\n#     use @auth.requires_login()\n#         @auth.requires_membership(\'group name\')\n#         @auth.requires_permission(\'read\',\'table name\',record_id)\n#     to decorate functions that need access control\n#     also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n#     """\n#     return dict(form=auth())\n#\n#\n# @cache.action()\n# def download():\n#     """\n#     allows downloading of uploaded files\n#     http://..../[app]/default/download/[filename]\n#     """\n#     return response.download(request, db)\n#\n#\n# def call():\n#     """\n#     exposes services. for example:\n#     http://..../[app]/default/call/jsonrpc\n#     decorate with @services.jsonrpc the functions to expose\n#     supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n#     """\n#     return service()\n\nresponse._vars=response._caller(populate_resolved_names_table)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'sqlite3'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of IntegrityError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of IntegrityError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of IntegrityError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of IntegrityError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of IntegrityError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of IntegrityError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of IntegrityError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of IntegrityError object>'
p35
sS'__class__'
p36
S"<class 'sqlite3.IntegrityError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of IntegrityError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of IntegrityError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of IntegrityError object>"
p45
sS'args'
p46
S"('UNIQUE constraint failed: resolved_names3.classification_path_ranks',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of IntegrityError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of IntegrityError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of IntegrityError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of IntegrityError object>"
p57
ssS'evalue'
p58
S'UNIQUE constraint failed: resolved_names3.classification_path_ranks'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\x8b`\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>pestlist</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">csrftoken</td><td style="vertical-align:top;">:</td><td><div>BdTm5f24ojwsp4yL4jX8IsiJa0T76YbSARW2xjlSwGWw4A5cHgusNPqKYJHYqgnC<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-2b41f0c6-7147-46e9-8f0f-f226786bcb0a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_pestlist</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-ed332d7f-0eb4-4c02-91f2-d1ab3cca5bba<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-72cc1edc-0f97-49a6-aad5-bacaedcbc022<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>csrftoken=BdTm5f24ojwsp4yL4jX8IsiJa0T76YbSARW2xjlSwGWw4A5cHgusNPqKYJHYqgnC; session_id_welcome=127.0.0.1-72cc1edc-0f97-49a6-aad5-bacaedcbc022; session_id_pestlist=127.0.0.1-ed332d7f-0eb4-4c02-91f2-d1ab3cca5bba; session_id_admin=127.0.0.1-2b41f0c6-7147-46e9-8f0f-f226786bcb0a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/pestlist/default/populate_resolved_names_table</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>35434</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>aubreymoore-Aspire-7750Z</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/&#x27;, &#x27;/home/aubreymoore/Devel/playpen/web2py/applications/welcome/&#x27;, &#x27;/home/aubreymoore/Devel/playpen/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/aubreymoore/Devel/playpen/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f39b35332d8: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;aubreymoore-Aspire-7750Z&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/aubreymoore/Devel/playpen/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/aubreymoore/Devel/playpen/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>csrftoken=BdTm5f24ojwsp4yL4jX8IsiJa0T76YbSARW2xjlSwGWw4A5cHgusNPqKYJHYqgnC; session_id_welcome=127.0.0.1-72cc1edc-0f97-49a6-aad5-bacaedcbc022; session_id_pestlist=127.0.0.1-ed332d7f-0eb4-4c02-91f2-d1ab3cca5bba; session_id_admin=127.0.0.1-2b41f0c6-7147-46e9-8f0f-f226786bcb0a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>aubreymoore-Aspire-7750Z</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/pestlist/default/populate_resolved_names_table</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>35434</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/pestlist/default/populate_resolved_names_table</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>aubreymoore-Aspire-7750Z</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/aubreymoore/Devel/playpen/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f39bbbd31e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f39b355dbb0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f397d07bd50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f39bbbd31e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f39b355dbb0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f397d07bd50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>populate_resolved_names_table</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/&#x27;, &#x27;/home/aubreymoore/Devel/playpen/web2py/applications/welcome/&#x27;, &#x27;/home/aubreymoore/Devel/playpen/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/aubreymoore/Devel/playpen/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f39b35332d8: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;aubreymoore-Aspire-7750Z&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/aubreymoore/Devel/playpen/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/aubreymoore/Devel/playpen/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>aubreymoore-Aspire-7750Z</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 3, 10, 2, 51, 36, 485216)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/pestlist/default/populate_resolved_names_table</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 3, 9, 16, 51, 36, 485256)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f397e1e7f50&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'/home/aubreymoore/Devel/playpen/web2py/gluon/restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 0x7f397d080530, file "/...ations/pestlist/controllers/default.py", line 12>'
p73
ssS'lnum'
p74
I227
sS'lines'
p75
(dp76
I224
S'            ccode = code'
p77
sI225
S'        else:'
p78
sI226
S'            ccode = compile2(code, layer)'
p79
sI227
S'        exec ccode in environment'
p80
sI228
S'    except HTTP:'
p81
sI229
S'        raise'
p82
sI230
S'    except RestrictedError:'
p83
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p84
sI222
S'    try:'
p85
sI223
S'        if isinstance(code, types.CodeType):'
p86
ssS'call'
p87
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...=response._caller(populate_resolved_names_table)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer='/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/controllers/default.py')"
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/controllers/default.py'
p92
sg68
(dp93
sg74
I436
sg75
(dp94
I425
S'#'
sI426
S'#'
sI427
S'# def call():'
p95
sI428
S'#     """'
p96
sI429
S'#     exposes services. for example:'
p97
sI430
S'#     http://..../[app]/default/call/jsonrpc'
p98
sI431
S'#     decorate with @services.jsonrpc the functions to expose'
p99
sI432
S'#     supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv'
p100
sI433
S'#     """'
p101
sI434
S'#     return service()'
p102
ssg87
S'()'
p103
sg89
S'<module>'
p104
sa(dp105
g66
S'/home/aubreymoore/Devel/playpen/web2py/gluon/globals.py'
p106
sg68
(dp107
S'self'
p108
S'undefined'
p109
sS'f'
S'<function populate_resolved_names_table>'
p110
ssg74
I417
sg75
(dp111
I416
S'        self._vars = None'
p112
sI417
S'        self._caller = lambda f: f()'
p113
sI418
S'        self._view_environment = None'
p114
sI419
S'        self._custom_commit = None'
p115
sI420
S'        self._custom_rollback = None'
p116
sI421
S"        self.generic_patterns = ['*']"
p117
sI412
S"        self.flash = ''            # used by the default view layout"
p118
sI413
S'        self.meta = Storage()      # used by web2py_ajax.html'
p119
sI414
S'        self.menu = []             # used by the default view layout'
p120
sI415
S'        self.files = []            # used by web2py_ajax.html'
p121
ssg87
S'(f=<function populate_resolved_names_table>)'
p122
sg89
S'<lambda>'
p123
sa(dp124
g66
S'/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/controllers/default.py'
p125
sg68
(dp126
S'builtinNone'
p127
S'None'
p128
sS'].get'
p129
S'<built-in method get of dict object>'
p130
sS'classification_path_ranks'
p131
g109
sS'row'
p132
S"{u'is_known_name': True, u'results': [{u'canonical_form': u'Persea americana', u'classification_path': u'Plantae|Tracheophyta|Magnoliopsida|Laurales|Lauraceae|Persea|Persea americana', u'classification_path_ids': u'6|7707728|220|407|6688|3034041|3034046', u'classification_path_ranks': u'kingdom|phylum|class|order|family|genus|species', u'data_source_id': 11, u'data_source_title': u'GBIF Backbone Taxonomy', u'edit_distance': 0, u'gni_uuid': u'e9a1bdf0-5723-5e79-af71-d0624abe84bf', u'imported_at': u'2016-11-13T20:45:44Z', u'match_type': 2, ...}], u'supplied_name_string': u'Persea americana'}"
p133
ssg74
I92
sg75
(dp134
I96
S'    # To get data, go to http://resolver.globalnames.org/'
p135
sI87
S"        if 'results' in row.keys():"
p136
sI88
S'            db.resolved_names3.insert('
p137
sI89
S"                supplied_name_string = row.get('supplied_name_string', None),"
p138
sI90
S"                classification_path = row['results'][0].get('classification_path', None),"
p139
sI91
S"                classification_path_ids = row['results'][0].get('classification_path_ids', None),"
p140
sI92
S"                classification_path_ranks = row['results'][0].get('classification_path_ranks', None)"
p141
sI93
S'            )'
p142
sI94
S'    # Now manually insert some more records'
p143
sI95
S''
ssg87
S'()'
p144
sg89
S'populate_resolved_names_table'
p145
sa(dp146
g66
S'/home/aubreymoore/Devel/playpen/web2py/gluon/packages/dal/pydal/objects.py'
p147
sg68
(dp148
S'self._listify'
p149
S'<bound method Table._listify of <Table resolved_...sification_path_ids, classification_path_ranks)>>'
p150
sS'fields'
p151
S"{'classification_path': u'Plantae|Tracheophyta|Magnoliopsida|Laurales|Lauraceae|Persea|Persea americana', 'classification_path_ids': u'6|7707728|220|407|6688|3034041|3034046', 'classification_path_ranks': u'kingdom|phylum|class|order|family|genus|species', 'supplied_name_string': u'Persea americana'}"
p152
sS'self'
p153
S'<Table resolved_names3 (id, supplied_name_string...ssification_path_ids, classification_path_ranks)>'
p154
sS'ret'
p155
g109
sS'self._db._adapter'
p156
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p157
sS'self._db._adapter.insert'
p158
S'<bound method SQLiteAdapter.insert of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p159
sS'self._db'
p160
S'<DAL uri="sqlite://storage.sqlite">'
p161
ssg74
I726
sg75
(dp162
I721
S'    def insert(self, **fields):'
p163
sI722
S'        fields = self._defaults(fields)'
p164
sI723
S'        self._attempt_upload(fields)'
p165
sI724
S'        if any(f(fields) for f in self._before_insert):'
p166
sI725
S'            return 0'
p167
sI726
S'        ret = self._db._adapter.insert(self, self._listify(fields))'
p168
sI727
S'        if ret and self._after_insert:'
p169
sI728
S'            fields = Row(fields)'
p170
sI729
S'            [f(fields, ret) for f in self._after_insert]'
p171
sI730
S'        return ret'
p172
ssg87
S"(self=<Table resolved_names3 (id, supplied_name_string...ssification_path_ids, classification_path_ranks)>, **fields={'classification_path': u'Plantae|Tracheophyta|Magnoliopsida|Laurales|Lauraceae|Persea|Persea americana', 'classification_path_ids': u'6|7707728|220|407|6688|3034041|3034046', 'classification_path_ranks': u'kingdom|phylum|class|order|family|genus|species', 'supplied_name_string': u'Persea americana'})"
p173
sg89
S'insert'
p174
sa(dp175
g66
S'/home/aubreymoore/Devel/playpen/web2py/gluon/packages/dal/pydal/adapters/base.py'
p176
sg68
(dp177
S'e'
S"IntegrityError('UNIQUE constraint failed: resolved_names3.classification_path_ranks',)"
p178
ssg74
I746
sg75
(dp179
I741
S'            self.execute(query)'
p180
sI742
S'        except Exception:'
p181
sI743
S'            e = sys.exc_info()[1]'
p182
sI744
S"            if hasattr(table,'_on_insert_error'):"
p183
sI745
S'                return table._on_insert_error(table,fields,e)'
p184
sI746
S'            raise e'
p185
sI747
S"        if hasattr(table, '_primarykey'):"
p186
sI748
S'            mydict = dict([(k[0].name, k[1]) for k in fields if k[0].name in table._primarykey])'
p187
sI749
S'            if mydict != {}:'
p188
sI750
S'                return mydict'
p189
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, table=<Table resolved_names3 (id, supplied_name_string...ssification_path_ids, classification_path_ranks)>, fields=[(<pydal.objects.Field object>, u'Persea americana'), (<pydal.objects.Field object>, u'Plantae|Tracheophyta|Magnoliopsida|Laurales|Lauraceae|Persea|Persea americana'), (<pydal.objects.Field object>, u'6|7707728|220|407|6688|3034041|3034046'), (<pydal.objects.Field object>, u'kingdom|phylum|class|order|family|genus|species')])"
p190
sg89
g174
sasS'pyver'
p191
S'Python 2.7.13: /home/aubreymoore/anaconda3/envs/playpen/bin/python (prefix: /home/aubreymoore/anaconda3/envs/playpen)'
p192
sS'session'
p193
g61
(S's\xe9\x01\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.resolved_names2.classification_path.contains(&#x27;Zing&#x27;)</div></td></tr></table></div>'
tRp194
sS'etype'
p195
S"<class 'sqlite3.IntegrityError'>"
p196
sS'date'
p197
S'Fri Mar 10 02:51:36 2017'
p198
sS'response'
p199
g61
(S's\xd5?\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f397e72b768&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_pestlist</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-ed332d7f-0eb4-4c02-91f2-d1ab3cca5bba<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="navbar-brand" href="http://www.web2py.com/" id="web2py-logo"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/pestlist/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>My Sites</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/site</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>This App</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>#</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Design</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design/pestlist</div></td></tr></table></div></td></tr><tr><td><div><li class="divider"></li></div></td></tr><tr><td><div><table><tr><td><div>Controller</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/pestlist/controllers/default.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>View</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/pestlist/views/default/populate_resolved_names_table.html</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>DB Model</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/pestlist/models/db.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Menu Model</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/pestlist/models/menu.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Config.ini</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/pestlist/private/appconfig.ini</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Layout</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/pestlist/views/layout.html</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Stylesheet</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/pestlist/static/css/web2py-bootstrap3.css</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Database</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/pestlist/appadmin/index</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Errors</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/errors/pestlist</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>About</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/about/pestlist</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>web2py.com</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>#</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Download</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/download</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Support</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/support</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Demo</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/demo_admin</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Quick Examples</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/examples/default/examples</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>FAQ</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/AlterEgo</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Videos</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/videos/</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Free Applications</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/appliances</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/plugins</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2pyslices.com/</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Documentation</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>#</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Online book</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book</div></td></tr></table></div></td></tr><tr><td><div><li class="divider"></li></div></td></tr><tr><td><div><table><tr><td><div>Preface</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/00</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Introduction</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/01</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Python</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/02</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Overview</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/03</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>The Core</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/04</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>The Views</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/05</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Database</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/06</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Forms and Validators</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/07</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Email and SMS</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/08</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Access Control</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/09</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Services</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/10</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Ajax Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/11</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Components and Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/12</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Deployment Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/13</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Other Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/14</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Helping web2py</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/15</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Buy web2py\'s book</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://stores.lulu.com/web2py</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Community</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Groups</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/usergroups</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Twitter</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://twitter.com/web2py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Live Chat</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://webchat.freenode.net/?channels=web2py</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>web2py</div></td></tr><tr><td><div>python</div></td></tr><tr><td><div>framework</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/populate_resolved_names_table/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_pestlist</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/sessions/1bc/01a/127.0.0.1-ed332d7f-0eb4-4c02-91f2-d1ab3cca5bba&#x27;, mode &#x27;rb+&#x27; at 0x7f397d58bf60&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/sessions/127.0.0.1-ed332d7f-0eb4-4c02-91f2-d1ab3cca5bba</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>67d7b7a47be2270efc60f0ac3264aab7</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-ed332d7f-0eb4-4c02-91f2-d1ab3cca5bba</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_pestlist</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>pestlist</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Pestlist</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/populate_resolved_names_table.html</div></td></tr></table></div>'
tRp200
sS'locals'
p201
(dp202
S'query'
p203
S'"INSERT INTO resolved_names3(supplied_name_string...ingdom|phylum|class|order|family|genus|species\');"'
p204
sS'self'
p205
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p206
sS'e'
S"IntegrityError('UNIQUE constraint failed: resolved_names3.classification_path_ranks',)"
p207
sS'fields'
p208
S"[(<pydal.objects.Field object>, u'Persea americana'), (<pydal.objects.Field object>, u'Plantae|Tracheophyta|Magnoliopsida|Laurales|Lauraceae|Persea|Persea americana'), (<pydal.objects.Field object>, u'6|7707728|220|407|6688|3034041|3034046'), (<pydal.objects.Field object>, u'kingdom|phylum|class|order|family|genus|species')]"
p209
sS'table'
p210
S'<Table resolved_names3 (id, supplied_name_string...ssification_path_ids, classification_path_ranks)>'
p211
sssS'traceback'
p212
S'Traceback (most recent call last):\n  File "/home/aubreymoore/Devel/playpen/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/controllers/default.py", line 436, in <module>\n  File "/home/aubreymoore/Devel/playpen/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/aubreymoore/Devel/playpen/web2py/applications/pestlist/controllers/default.py", line 92, in populate_resolved_names_table\n    classification_path_ranks = row[\'results\'][0].get(\'classification_path_ranks\', None)\n  File "/home/aubreymoore/Devel/playpen/web2py/gluon/packages/dal/pydal/objects.py", line 726, in insert\n    ret = self._db._adapter.insert(self, self._listify(fields))\n  File "/home/aubreymoore/Devel/playpen/web2py/gluon/packages/dal/pydal/adapters/base.py", line 746, in insert\n    raise e\nIntegrityError: UNIQUE constraint failed: resolved_names3.classification_path_ranks\n'
p213
s.